{"ast":null,"code":"var _jsxFileName = \"/home/nilayan/Desktop/SKRIBBLE/client/src/components/Chatbox/Chatbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000');\nconst Chatbox = ({\n  username\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    socket.on('chatMessage', ({\n      username,\n      message\n    }) => {\n      setMessages(prev => [...prev, {\n        username,\n        message\n      }]);\n    });\n    socket.on('systemMessage', message => {\n      setMessages(prev => [...prev, {\n        username: 'BigBoss',\n        message\n      }]);\n    });\n    socket.on('guessResult', ({\n      username,\n      success\n    }) => {\n      if (success) {\n        setMessages(prev => [...prev, {\n          username: `${username} guessed correctly!`\n        }]);\n      }\n    });\n    return () => {\n      socket.off('chatMessage');\n      socket.off('systemMessage');\n      socket.off('guessResult');\n    };\n  }, []);\n  const sendMessage = e => {\n    e.preventDefault();\n    if (message.trim() === \"\") return;\n    socket.emit('chatMessage', {\n      username,\n      message\n    });\n    setMessages(prev => [...prev, {\n      username,\n      message\n    }]);\n    setMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '400px',\n      marginTop: '20px',\n      marginLeft: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid black',\n        height: '200px',\n        overflowY: 'auto',\n        padding: '10px',\n        marginBottom: '10px'\n      },\n      children: messages.map((msg, index) => msg.system ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontStyle: 'italic',\n          color: 'green'\n        },\n        children: [\" \", msg.message, \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.username, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }, this), \" \", msg.message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Guess...\",\n        style: {\n          width: '300px',\n          padding: '10px',\n          marginRight: '10px'\n        },\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Submit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n};\n_s(Chatbox, \"cirg1XNVuY5I7aqZjd23CdWZMY0=\");\n_c = Chatbox;\nexport default Chatbox;\nvar _c;\n$RefreshReg$(_c, \"Chatbox\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","Chatbox","username","_s","messages","setMessages","message","setMessage","on","prev","success","off","sendMessage","e","preventDefault","trim","emit","style","width","marginTop","marginLeft","children","border","height","overflowY","padding","marginBottom","map","msg","index","system","fontStyle","color","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","marginRight","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/nilayan/Desktop/SKRIBBLE/client/src/components/Chatbox/Chatbox.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport io from \"socket.io-client\";\n\nconst socket = io('http://localhost:4000');\n\nconst Chatbox = ( {username} ) => {\n\n   const [messages, setMessages] = useState([]);\n   const [message, setMessage] = useState(\"\");\n\n   useEffect(() => {\n      socket.on('chatMessage', ({ username, message }) => {\n         setMessages((prev) => [...prev, { username, message }]);\n      });\n\n      socket.on('systemMessage', (message) => {\n         setMessages((prev) => [...prev, {username: 'BigBoss', message}]);\n      });\n\n      socket.on('guessResult', ( {username, success}) => {\n         if(success) {\n            setMessages((prev) => [...prev, {username: `${username} guessed correctly!` }]);\n         }\n      })\n\n      return () => {\n         socket.off('chatMessage');\n         socket.off('systemMessage');\n         socket.off('guessResult');\n      };\n\n   }, []);\n\n   const sendMessage = (e) => {\n      e.preventDefault();\n      if(message.trim() === \"\") return;\n      socket.emit('chatMessage', { username, message });\n      setMessages((prev) => [...prev, { username, message }]);\n      setMessage(\"\");\n   };\n\n   return (\n      <div style={{width : '400px', marginTop : '20px', marginLeft : '20px'}}>\n         <div style = {{\n            border : '1px solid black',\n            height : '200px',\n            overflowY : 'auto',\n            padding : '10px',\n            marginBottom : '10px',\n         }}>\n\n            {messages.map((msg, index)=>\n               msg.system ? (\n                  <p key = {index} style = {{fontStyle : 'italic', color : 'green'}}> {msg.message} </p>\n               ) : (<p key = {index}>\n                  <strong>{msg.username}:</strong> {msg.message}</p>)\n            )}\n         </div>\n         <form onSubmit = {sendMessage}>\n            <input\n               type=\"text\"\n               placeholder=\"Guess...\"\n               style={{width: '300px', padding: '10px', marginRight: '10px'}} \n               value = {message}\n               onChange = {(e) => setMessage(e.target.value)}\n            />\n            <button type=\"submit\" > Submit </button>\n         </form>\n      </div>\n   );\n}\n\nexport default Chatbox;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
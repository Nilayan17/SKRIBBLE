{"ast":null,"code":"var _jsxFileName = \"/home/nilayan/Desktop/skribble/client/src/components/Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000');\nconst Canvas = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    // console.log(canvas.width);\n    // canvas.width = window.innerWidth * 0.9;\n    // canvas.height = window.innerHeight * 0.7;\n    canvas.width = 800;\n    canvas.height = 600;\n    canvas.style.border = '2px solid black';\n    const context = canvas.getContext('2d');\n    context.lineCap = 'round';\n    context.strokeStyle = 'black';\n    context.lineWidth = 3;\n    contextRef.current = context;\n    socket.on('draw', data => {\n      contextRef.current.lineTo(data.offsetX, data.offsetY);\n      contextRef.current.stroke();\n      contextRef.current.beginPath();\n      contextRef.current.moveTo(data.offsetX, data.offsetY);\n    });\n    socket.on('clear', () => {\n      contextRef.current.clearRect(0, 0, canvas.width, canvas.height);\n    });\n    return () => {\n      socket.off('draw');\n      socket.off('clear');\n    };\n  }, []);\n  const startDrawing = ({\n    nativeEvent\n  }) => {\n    console.log(\"attempting to draw\");\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(offsetX, offsetY);\n    setIsDrawing(true);\n  };\n  const draw = ({\n    nativeEvent\n  }) => {\n    if (!isDrawing) {\n      return;\n    }\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    contextRef.current.lineTo(offsetX, offsetY);\n    contextRef.current.stroke();\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(offsetX, offsetY);\n    socket.emit('draw', {\n      offsetX,\n      offsetY\n    });\n  };\n  const stopDrawing = () => {\n    contextRef.current.closePath();\n    setIsDrawing(false);\n  };\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    contextRef.current.clearRect(0, 0, canvas.width, canvas.height);\n    socket.emit('clear');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      onMouseDown: startDrawing,\n      onMouseMove: draw,\n      onMouseUp: stopDrawing,\n      onMouseLeave: stopDrawing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearCanvas,\n      children: \" Clear Drawing \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 7\n  }, this);\n};\n_s(Canvas, \"deDGxNBrSwuQyYRoZRn3CQiJKJQ=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useRef","useEffect","useState","io","jsxDEV","_jsxDEV","socket","Canvas","_s","canvasRef","contextRef","isDrawing","setIsDrawing","canvas","current","width","height","style","border","context","getContext","lineCap","strokeStyle","lineWidth","on","data","lineTo","offsetX","offsetY","stroke","beginPath","moveTo","clearRect","off","startDrawing","nativeEvent","console","log","draw","emit","stopDrawing","closePath","clearCanvas","children","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/nilayan/Desktop/skribble/client/src/components/Canvas.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:4000');\n\n\nconst Canvas = () => {\n   const canvasRef = useRef(null);\n   const contextRef = useRef(null);\n   const [isDrawing ,setIsDrawing] = useState(false);\n   \n   useEffect(() => {\n      const canvas = canvasRef.current;\n      // console.log(canvas.width);\n      // canvas.width = window.innerWidth * 0.9;\n      // canvas.height = window.innerHeight * 0.7;\n      canvas.width = 800; \n      canvas.height = 600; \n      canvas.style.border = '2px solid black';\n\n      const context = canvas.getContext('2d');\n      context.lineCap = 'round';\n      context.strokeStyle = 'black';\n      context.lineWidth = 3;\n      contextRef.current = context;\n\n      socket.on('draw', (data) => {\n         contextRef.current.lineTo(data.offsetX, data.offsetY);\n         contextRef.current.stroke();\n         contextRef.current.beginPath();\n         contextRef.current.moveTo(data.offsetX, data.offsetY);\n      });\n\n      socket.on('clear', () => {\n         contextRef.current.clearRect(0, 0, canvas.width, canvas.height);\n      })\n\n      return () => {\n         socket.off('draw');\n         socket.off('clear');\n      };\n   }, []);\n\n   const startDrawing = ({nativeEvent}) => {\n      console.log(\"attempting to draw\");\n      const {offsetX, offsetY} = nativeEvent;\n      contextRef.current.beginPath();\n      contextRef.current.moveTo(offsetX, offsetY);\n      setIsDrawing(true);\n   };\n\n   const draw = ({nativeEvent}) => {\n      if (!isDrawing) {\n         return;\n      }\n      const {offsetX, offsetY} = nativeEvent;\n      contextRef.current.lineTo(offsetX, offsetY);\n      contextRef.current.stroke();\n      contextRef.current.beginPath();\n      contextRef.current.moveTo(offsetX, offsetY);\n\n      socket.emit('draw', {offsetX, offsetY});\n   };\n\n   const stopDrawing = () => {\n      contextRef.current.closePath();\n      setIsDrawing(false);\n   };\n\n   const clearCanvas = () => {\n      const canvas = canvasRef.current;\n      contextRef.current.clearRect(0, 0, canvas.width, canvas.height);\n\n      socket.emit('clear');\n   }\n\n   return (\n      <div>\n         <canvas \n            ref = {canvasRef}\n            onMouseDown = {startDrawing}\n            onMouseMove = {draw}\n            onMouseUp = {stopDrawing}\n            onMouseLeave = {stopDrawing}\n         />\n         <br />\n         <button onClick = { clearCanvas }> Clear Drawing </button>\n      </div>\n   );\n}\n\n\nexport default Canvas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/nilayan/Desktop/SKRIBBLE/client/src/components/Canvas/Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000');\nconst Canvas = roomId => {\n  _s();\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    // console.log(canvas.width);\n    // canvas.width = window.innerWidth * 0.9;\n    // canvas.height = window.innerHeight * 0.7;\n    canvas.width = 800;\n    canvas.height = 600;\n    canvas.style.border = '2px solid black';\n    const context = canvas.getContext('2d');\n    context.lineCap = 'round';\n    context.strokeStyle = 'black';\n    context.lineWidth = 3;\n    contextRef.current = context;\n    socket.on('startDrawing', data => {\n      const {\n        offsetX,\n        offsetY\n      } = data;\n      contextRef.current.beginPath();\n      contextRef.current.moveTo(offsetX, offsetY);\n      contextRef.current.lineTo(offsetX, offsetY);\n      contextRef.current.stroke();\n    });\n    socket.on('draw', data => {\n      contextRef.current.lineTo(data.offsetX, data.offsetY);\n      contextRef.current.stroke();\n      contextRef.current.beginPath();\n      contextRef.current.moveTo(data.offsetX, data.offsetY);\n    });\n    socket.on('stopDrawing', () => {\n      contextRef.current.closePath();\n    });\n    socket.on('clear', () => {\n      contextRef.current.clearRect(0, 0, canvas.width, canvas.height);\n    });\n    return () => {\n      socket.off('startDrawing');\n      socket.off('draw');\n      socket.off('stopDrawing');\n      socket.off('clear');\n    };\n  }, []);\n  const startDrawing = ({\n    nativeEvent\n  }) => {\n    console.log(\"attempting to draw\");\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(offsetX, offsetY);\n    contextRef.current.lineTo(offsetX, offsetY);\n    contextRef.current.stroke();\n    setIsDrawing(true);\n    socket.emit('startDrawing', {\n      offsetX,\n      offsetY,\n      room: roomId\n    });\n  };\n  const draw = ({\n    nativeEvent\n  }) => {\n    if (!isDrawing) {\n      return;\n    }\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    contextRef.current.lineTo(offsetX, offsetY);\n    contextRef.current.stroke();\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(offsetX, offsetY);\n    socket.emit('draw', {\n      offsetX,\n      offsetY,\n      room: roomId\n    });\n  };\n  const stopDrawing = () => {\n    contextRef.current.closePath();\n    setIsDrawing(false);\n    socket.emit('stopDrawing', {\n      roomId\n    });\n  };\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    contextRef.current.clearRect(0, 0, canvas.width, canvas.height);\n    socket.emit('clear', {\n      roomId\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas-container\",\n    style: {\n      margin: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      onMouseDown: startDrawing,\n      onMouseMove: draw,\n      onMouseUp: stopDrawing,\n      onMouseLeave: stopDrawing,\n      onClick: draw\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearCanvas,\n      children: \" Clear Drawing \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 7\n  }, this);\n};\n_s(Canvas, \"deDGxNBrSwuQyYRoZRn3CQiJKJQ=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useRef","useEffect","useState","io","jsxDEV","_jsxDEV","socket","Canvas","roomId","_s","canvasRef","contextRef","isDrawing","setIsDrawing","canvas","current","width","height","style","border","context","getContext","lineCap","strokeStyle","lineWidth","on","data","offsetX","offsetY","beginPath","moveTo","lineTo","stroke","closePath","clearRect","off","startDrawing","nativeEvent","console","log","emit","room","draw","stopDrawing","clearCanvas","className","margin","children","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nilayan/Desktop/SKRIBBLE/client/src/components/Canvas/Canvas.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:4000');\n\nconst Canvas = (roomId) => {\n   const canvasRef = useRef(null);\n   const contextRef = useRef(null);\n   const [isDrawing ,setIsDrawing] = useState(false);\n   \n   useEffect(() => {\n      const canvas = canvasRef.current;\n      // console.log(canvas.width);\n      // canvas.width = window.innerWidth * 0.9;\n      // canvas.height = window.innerHeight * 0.7;\n      canvas.width = 800; \n      canvas.height = 600; \n      canvas.style.border = '2px solid black';\n\n      const context = canvas.getContext('2d');\n      context.lineCap = 'round';\n      context.strokeStyle = 'black';\n      context.lineWidth = 3;\n      contextRef.current = context;\n\n\n      socket.on('startDrawing', (data) => {\n         const {offsetX, offsetY} = data;\n         contextRef.current.beginPath();\n         contextRef.current.moveTo(offsetX, offsetY);\n         contextRef.current.lineTo(offsetX, offsetY);\n         contextRef.current.stroke();\n      })\n      socket.on('draw', (data) => {\n         contextRef.current.lineTo(data.offsetX, data.offsetY);\n         contextRef.current.stroke();\n         contextRef.current.beginPath();\n         contextRef.current.moveTo(data.offsetX, data.offsetY);\n      });\n\n      socket.on('stopDrawing', () => {\n         contextRef.current.closePath();\n      });\n\n      socket.on('clear', () => {\n         contextRef.current.clearRect(0, 0, canvas.width, canvas.height);\n      })\n\n      return () => {\n         socket.off('startDrawing');\n         socket.off('draw');\n         socket.off('stopDrawing');\n         socket.off('clear');\n      };\n   }, []);\n\n   const startDrawing = ({nativeEvent}) => {\n      console.log(\"attempting to draw\");\n      const {offsetX, offsetY} = nativeEvent;\n      contextRef.current.beginPath();\n      contextRef.current.moveTo(offsetX, offsetY);\n      contextRef.current.lineTo(offsetX, offsetY);\n      contextRef.current.stroke();\n      setIsDrawing(true);\n      socket.emit('startDrawing', {offsetX, offsetY, room: roomId});\n   };\n\n   const draw = ({nativeEvent}) => {\n      if (!isDrawing) {\n         return;\n      }\n      const {offsetX, offsetY} = nativeEvent;\n      contextRef.current.lineTo(offsetX, offsetY);\n      contextRef.current.stroke();\n      contextRef.current.beginPath();\n      contextRef.current.moveTo(offsetX, offsetY);\n      socket.emit('draw', {offsetX, offsetY, room: roomId});\n   };\n\n   const stopDrawing = () => {\n      contextRef.current.closePath();\n      setIsDrawing(false);\n      socket.emit('stopDrawing', {roomId});\n   };\n\n   const clearCanvas = () => {\n      const canvas = canvasRef.current;\n      contextRef.current.clearRect(0, 0, canvas.width, canvas.height);\n      socket.emit('clear', {roomId});\n   }\n\n   return (\n      <div className='canvas-container' style={{margin: '20px'}}>\n         <canvas \n            ref = {canvasRef}\n            onMouseDown = {startDrawing}\n            onMouseMove = {draw}\n            onMouseUp = {stopDrawing}\n            onMouseLeave = {stopDrawing}\n            onClick = {draw}\n         />\n         <br />\n         <button onClick = { clearCanvas }> Clear Drawing </button>\n      </div>\n   );\n}\n\n\nexport default Canvas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}